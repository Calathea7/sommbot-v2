{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Homepage","About","CreateAccount","props","React","useState","email","setEmail","password","setPassword","name","setName","htmlFor","id","type","onChange","e","target","value","onClick","preventDefault","fields","fetch","method","headers","body","JSON","stringify","then","res","json","data","alert","message","Login","inputs","UserProfile","savedRecs","setSavedRecs","useEffect","recs","rec","push","PostRecItem","Recommendation","minYear","setMinYear","maxYear","setMaxYear","minPrice","setMinPrice","maxPrice","setMaxPrice","descriptor","setDescriptor","recList","setRecList","showResult","setShowResult","recInfo","setRecInfo","options","label","filterCheckbox","Array","isArray","map","x","SaveRec","WineFilters","filters","console","log","WineResult","onSubmit","filter","obj","includes","isMulti","isClearable","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"js/main.804f4fb0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport Select from 'react-select';\n\nfunction Homepage() {\n    return <div> Welcome to my site </div>\n}\n\nfunction About() {\n    return <div> Wine recommendation app </div>\n}\n\nfunction CreateAccount(props) {\n\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [name, setName] = React.useState('')\n\n  const CreateUser = (e) => {\n    e.preventDefault()\n    const fields = {\n      \"email\":email,\n      \"password\":password,\n      \"name\": name\n    }\n    fetch('/api/create-account', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(fields)\n    })\n    .then(res => res.json())\n    .then((data) => {\n      alert(data.message)\n    })\n  };\n  return (\n    <form>\n      <label htmlFor=\"email\">Email:</label>\n      <input\n        id=\"email\"\n        type=\"text\"\n        onChange={(e) => setEmail(e.target.value)}\n        value={email}>\n      </input>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}>\n      </input>\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        value={password}>\n      </input>\n      <button onClick={CreateUser}> Create Profile </button>\n    </form>\n  )\n}\n\nfunction Login(props) {\n\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState('')\n\n  const LogoutUser = (e) => {\n    e.preventDefault()\n    fetch('/api/logout')\n    .then(res => res.json())\n    .then((data) => {\n      alert(data.message)\n    })\n  };\n\n  const VerifyUser = (e) => {\n    e.preventDefault()\n    const inputs = {\n      \"email\": email,\n      \"password\": password\n    }\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(inputs)\n    })\n    .then(res => res.json())\n    .then((data) => {\n      alert(data.message)\n    })\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"email\">Email:</label>\n      <input\n        id=\"email\"\n        type=\"text\"\n        onChange={(e) => setEmail(e.target.value)}\n        value={email}>\n      </input>\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        value={password}>\n      </input>\n      <button onClick={VerifyUser}> Log In </button>\n      <button onClick={LogoutUser}> Log Out </button>\n    </form>\n  )\n}\n\n\n\n// function Selector(props) {\n\n//   function onChange(e) {\n//     this.value = e.target.value\n//   }\n//   return (\n//     <div>\n//       <select onChange={self.onChange}>\n//         {props.optionsList.map(option => {\n//           return <option value={option}> option </option>;\n//         }\n//       </select>\n//     </div>\n//   )\n// }\nfunction UserProfile(props) {\n\n  const [savedRecs, setSavedRecs] = React.useState([\"loading...\"])\n\n  React.useEffect(() => {\n    fetch('/api/user-profile')\n    .then(res => res.json())\n    .then((data) => {\n      const recs = []\n      for (const rec of data) {\n        recs.push(<PostRecItem rec={rec}/>)\n      }\n      setSavedRecs(recs)\n    })\n  }, [])\n\n  return (\n    <div>\n      <ul>\n        {savedRecs}\n      </ul>\n    </div>\n  )\n}\n\n\nfunction PostRecItem(props) {\n  return <li>{props.rec}</li>\n}\n\nfunction Recommendation(props) {\n\n  const [minYear, setMinYear] = React.useState('1000')\n  const [maxYear, setMaxYear] = React.useState('2017')\n  const [minPrice, setMinPrice] = React.useState('0')\n  const [maxPrice, setMaxPrice] = React.useState('3300')\n  const [descriptor, setDescriptor] = React.useState([])\n  const [recList, setRecList] = React.useState([\"loading...\"])\n  const [showResult, setShowResult] = React.useState(false)\n  const [recInfo, setRecInfo] = React.useState([])\n\n  // const descriptors = ['cherry', 'strawberry', 'mushroom','perfumed', 'ripe', 'oak', 'juicy']\n  const options = [\n    {value: 'strawberry', label: 'strawberry'},\n    {value: 'cherry', label: 'cherry'},\n    {value: 'mushroom', label: 'mushroom'},\n    {value: 'perfumed', label: 'perfumed'},\n    {value: 'ripe', label: 'ripe'},\n    {value: 'oak', label: 'oak'},\n    {value: 'juicy', label: 'juicy'},\n  ]\n\n  const filterCheckbox = (e) => {\n    setDescriptor(Array.isArray(e) ? e.map(x => x.value) : []);\n  }\n\n  const SaveRec = (e) => {\n    e.preventDefault()\n    const fields = {\n      \"rec_info\":recInfo\n    }\n    fetch('/api/wine/save-rec', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(fields)\n    })\n    .then(res => res.json())\n    .then((data) => {\n      alert(data.message)\n    })\n  };\n\n\n  const WineFilters = (e)=> {\n    e.preventDefault()\n    const filters = {\"min_year\": minYear,\n                    \"max_year\": maxYear,\n                    \"min_price\": minPrice,\n                    \"max_price\": maxPrice,\n                    \"descriptor\": descriptor}\n    console.log(filters)\n    console.log(JSON.stringify(filters))\n    // fetch('localhost:24050/api/wine/recommendation?min_year=1990&')\n    fetch('/api/recommendation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(filters),\n    })\n    .then(res => res.json())\n    .then((data) => {\n      const recs = []\n      for (const rec of data) {\n        recs.push(<PostRecItem rec={rec}/>)\n      }\n      setRecList(recs)\n      setShowResult(true)\n      setRecInfo(data)\n    })\n  }\n\n  function WineResult() {\n    if (showResult) {\n      return (\n        <div>\n          Here are some wines that match your criteria:\n          <ul>\n            {recList}\n          </ul>\n          <button onClick={SaveRec}>Save this</button>\n        </div>\n      )\n    }\n    {\n      return (\n        <form onSubmit={WineFilters} id=\"wine-search\" method=\"POST\">\n          <div>\n            Please pick your year of production range(optional):\n            Min:\n            {/* <Selector options=[1970, 1980, 1990, 2000] id=\"min-year\" /> */}\n            <select value={minYear} onChange={(e) => setMinYear(e.target.value)} id=\"min-year\" name=\"min-year\">\n              <option value=\"1970\">1970</option>\n              <option value=\"1980\">1980</option>\n              <option value=\"1990\">1990</option>\n              <option value=\"2000\">2000</option>\n            </select>\n            Max:\n            <select value={maxYear} onChange={(e) => setMaxYear(e.target.value)} id=\"max-year\" name=\"max-year\">\n              <option value=\"2017\">2017</option>\n              <option value=\"2015\">2015</option>\n              <option value=\"2013\">2013</option>\n              <option value=\"2011\">2011</option>\n            </select>\n          </div>\n          <div>\n            Please pick your price range:\n            Min:\n            <select value={minPrice} onChange={(e) => setMinPrice(e.target.value)} id=\"min-price\" name=\"min-price\">\n              <option value=\"0\">0</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n              <option value=\"30\">30</option>\n              <option value=\"40\">40</option>\n              <option value=\"50\">50</option>\n              <option value=\"60\">60</option>\n              <option value=\"70\">70</option>\n            </select>\n            Max:\n            <select value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} id=\"max-price\" name=\"max-price\">\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n              <option value=\"30\">30</option>\n              <option value=\"40\">40</option>\n              <option value=\"50\">50</option>\n              <option value=\"60\">60</option>\n              <option value=\"70\">70</option>\n              <option value=\"1000\">1000</option>\n            </select>\n          </div>\n          <div>\n            Please choose descriptors for your dream wine:\n            <Select\n            value={options.filter(obj => descriptor.includes(obj.value))}\n            options = {options}\n            onChange={filterCheckbox}\n            isMulti\n            isClearable\n            />\n          </div>\n          <input type=\"submit\"/>\n        </form>\n      )\n    }\n  };\n\n\n\n\n  return (\n    <WineResult />\n  )\n  }\n\n\n\n\nfunction App() {\n  return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                  <Link to=\"/\"> Home </Link>\n              </li>\n              <li>\n                  <Link to=\"/about\"> About </Link>\n              </li>\n              <li>\n                  <Link to=\"/login\"> Login </Link>\n              </li>\n              <li>\n                  <Link to=\"/profile\"> Profile </Link>\n              </li>\n              <li>\n                  <Link to=\"/create-account\"> Create Account </Link>\n              </li>\n              <li>\n                  <Link to=\"/recommendation\"> Wine Recommendation </Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/create-account\">\n              <CreateAccount />\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile />\n            </Route>\n            <Route path=\"/recommendation\">\n              <Recommendation />\n            </Route>\n            <Route path=\"/\">\n              <Homepage />\n            </Route>\n\n          </Switch>\n        </div>\n      </Router>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}